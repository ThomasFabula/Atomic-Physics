C **********************************************************************MUL00010
C     PROGRAM MULTIKING  VON CWP PALMER 				MUL00020
C									MUL00030
C     VERSION VOM 9. SEPT 1985						MUL00040
C									MUL00050
C     EINGABEN :							MUL00060
C									MUL00070
C     DIE DATEN WERDEN UNFORMATIERT GELESEN.				MUL00080
C									MUL00090
C     KARTE NR. 1							MUL00100
C     -----------							MUL00110
C									MUL00120
C     FORMAT	 VARIABLE      BEDEUTUNG				MUL00130
C									MUL00140
C     C2	  EL	       NAME DES ELEMENTES			MUL00150
C     I4	  NMULT        ANZAHL MULTIPLETTS			MUL00160
C     I4	  NP	       ANZAHL DER ISOTOPEN PAARE IN JEDER	MUL00170
C			       LINIE					MUL00180
C     I4	  NL	       ANZAHL LINIEN				MUL00190
C     I4	  NIT	       MAXIMALE ANZAHL ITERATIONEN		MUL00200
C     I4	  ID	       1 =  AUSDRUCK DER VCV MATRIX		MUL00210
C			       0 =  KEIN AUSDRUCK DER VCV MATRIX	MUL00220
C									MUL00230
C									MUL00240
C     KARTE NR. 2							MUL00250
C     -----------							MUL00260
C									MUL00270
C     I4	  A1	      FUER JEDES ISOTOPEN PAAR DIE DATEN	MUL00280
C     I4	  A2	      DER BEIDEN MASSENZAHLEN .ES MUESSEN	MUL00290
C			      NP DERARTIGE PAARE (A1,A2) EINGEGEBEN	MUL00300
C			      WERDEN.					MUL00310
C									MUL00320
C      KARTE NR. 3							MUL00330
C      -----------							MUL00340
C									MUL00350
C    I4 	 ALF(J)       MASSENFAKTOR (M(A1)*M(A2))/(M(A1)-M(A2)). MUL00360
C			      FUER JEDES ISOTOPEN PAAR EINE EINGABE.	MUL00370
C									MUL00380
C									MUL00390
C      DIE FOLGENDEN KARTEN MUESSEN FUER JEDES MULTIPLETT EINGEGEBEN	MUL00400
C      WERDEN								MUL00410
C									MUL00420
C      KARTE NR.4							MUL00430
C      ----------							MUL00440
C									MUL00450
C      I4	 NLM(I,1)     ANZAHL LINIEN DES I-TEN  MULTIPLETS.	MUL00460
C      I4	 NLM(I,2)     ANZAHL DER OBEREN ZUSTAENDE.		MUL00470
C      I4	 NLM(I,3)     ANZAHL DER UNTEREN ZUSTAENDE.		MUL00480
C									MUL00490
C      ES FOLGT FUER ALLE LINIEN DER NMULT MUTIPLETTS EINE		MUL00500
C      KARTE VOM TYP 6. ZUERST DIE LINIEN VOM ERSTEN MULTIPLETT,	MUL00510
C      DANN VOM ZWEITEN ETC.						MUL00520
C									MUL00530
C									MUL00540
C      KARTE NR.6							MUL00550
C      ----------							MUL00560
C									MUL00570
C      C10	TITLE(I)      BEZEICHNUNG DER LINIE.			MUL00580
C      C3	UNIT(I)       EINHEIT DER EINGABE DATEN.		MUL00590
C      I4	LINR(I,2)     NR. DES OBEREN ZUSTANDES. 		MUL00600
C      I4	LINR(I,3)     NR. DES UNTEREN ZUSTANDES.		MUL00610
C      I4	  H	      S.U.					MUL00620
C      R8	Z(L)	      NP DATEN DER ISOTOPIE VERSCHIEBUNG DER	MUL00630
C			      I-TEN  LINIE.				MUL00640
C      R8	W(L)	      FUER H=0, WERDEN HIER DIE ZUGEHOERIGEN	MUL00650
C			      FEHLER EINGELESEN.			MUL00660
C			      FUER H<>0 WIRD DIE VCV MATRIX IN UNTERER	MUL00670
C			      DIAGONALEN FORM GELESEN.			MUL00680
C									MUL00690
C     KARTE NR. 7							MUL00700
C     -----------							MUL00710
C									MUL00720
C     R8	X(I)	      STARTWERTE FUER DIE PHI UND MUE PARAMETER.MUL00730
C									MUL00740
C									MUL00750
C     ES FOLGEN DIE DATEN FUER DAS NAECHSTE MULTIPLET.			MUL00760
C									MUL00770
C									MUL00780
C **********************************************************************MUL00790
									MUL00800
      IMPLICIT REAL * 8 (A-H,O-Z)					MUL00810
      INTEGER * 4 LW,MM,NM,NPM,LM,WM					MUL00820
      PARAMETER (LW=50000,MM=600,NM=100,NPM=6,LM=100,WM=1000)		MUL00830
      REAL * 8 X(NM),DX(NM),R(MM),Z(MM),WZ(WM),W(LW)			MUL00840
      REAL * 8 ALF(NPM),XALF(NPM),CHI,C2,F,DF,S,DS			MUL00850
      INTEGER * 4 N,N1,NP,IFAIL 					MUL00860
      INTEGER * 4 M,NL,NMULT,NLM(LM,3),LINR(LM,3),NIT			MUL00870
      INTEGER * 4 A1(NPM),A2(NPM),I,II,J,JJ,K,KK,L,LL,ID		MUL00880
      LOGICAL * 1 FL(LM,3),WL(LM)					MUL00890
      CHARACTER * 10 TITLE(LM)						MUL00900
      CHARACTER * 3  UNIT(LM)						MUL00910
      CHARACTER * 2 EL							MUL00920
      EXTERNAL FIT2,RANDJ,F01ABF					MUL00930
      COMMON Z,ALF,LINR,FL						MUL00940
C									MUL00950
C *** READ IN CONSTANTS,TEST MULTIPLET TOTALS ADD UP TO NL,		MUL00960
C *** TEST IF LW LARGE ENOUGH						MUL00970
C									MUL00980
      READ(5,*) EL,NMULT,NP,NL,NIT,ID					MUL00990
      M=NP*NL								MUL01000
      READ(5,*)(A1(I),A2(I),I=1,NP)					MUL01010
      READ(5,*)(ALF(I),I=1,NP)						MUL01020
      L=0								MUL01030
      N=NP + (NMULT-1) * 2						MUL01040
      DO 5 I=1,NMULT							MUL01050
	 READ(5,*) (NLM(I,J),J=1,3)					MUL01060
	 N=N+2*(NLM(I,2)+NLM(I,3)-2)					MUL01070
	 L = L+NLM(I,1) 						MUL01080
5     CONTINUE								MUL01090
      IF ( L.NE.NL) THEN						MUL01100
	 WRITE(6,88) NL,L						MUL01110
	 GOTO 999							MUL01120
      ENDIF								MUL01130
      N1=N+1								MUL01140
      L=N*(2*N+M+1)							MUL01150
      IF(LW.LT.L) THEN							MUL01160
	 WRITE(6,90) L							MUL01170
	 GOTO 999							MUL01180
      ENDIF								MUL01190
C									MUL01200
C *** READ IN ISOTOPE SHIFTS AND EITHER THEIR VCV MATRICES, TO BE	MUL01210
C *** INVERTED, OR THEIR STANDARD DEVIATIONS.				MUL01220
C *** DEFINE LOGICAL ARRAYS.						MUL01230
C									MUL01240
      K=0								MUL01250
      KK=0								MUL01260
      L=0								MUL01270
      LL=0								MUL01280
      DO 20 II=1,NMULT							MUL01290
	 DO 15 JJ=1,NLM(II,1)						MUL01300
	    L=L+1							MUL01310
	    READ(5,*) TITLE(L),UNIT(L),LINR(L,2),LINR(L,3),I,		MUL01320
     *		      (Z(LL+J),J=1,NP)					MUL01330
	    WL(L)=I.NE.0						MUL01340
	    IF (WL(L)) THEN						MUL01350
	       READ(5,*)((W(I+(J-1)*(NP+1)),I=1,J),J=1,NP)		MUL01360
	       IFAIL=1							MUL01370
	       CALL F01ABF(W,NP+1,NP,W(NP*(NP+1)+1),NP,DX,IFAIL)	MUL01380
	       IF(IFAIL.NE.0) THEN					MUL01390
		  WRITE(6,99) L 					MUL01400
		  GOTO 999						MUL01410
	       ENDIF							MUL01420
	       DO 10 J=1,NP						MUL01430
		  DO 10 I=J,NP						MUL01440
		     WZ(K+I+((J-1)*(2*NP-J))/2)=W(I+1+(J-1)*(NP+1))	MUL01450
10	       CONTINUE 						MUL01460
	       K=K+(NP*(NP+1))/2					MUL01470
	    ELSE							MUL01480
	       READ(5,*) (WZ(K+J),J=1,NP)				MUL01490
	       DO 12 J=K+1,K+NP 					MUL01500
		  WZ(J)=1.0/(WZ(J)**2)					MUL01510
12	       CONTINUE 						MUL01520
	       K=K+NP							MUL01530
	    ENDIF							MUL01540
	    FL(L,2) = LINR(L,2).NE.0					MUL01550
	    FL(L,3) = LINR(L,3).NE.0					MUL01560
	    IF((LINR(L,2).GE.NLM(II,2)).OR.(LINR(L,3).GE.NLM(II,3)))THENMUL01570
	       WRITE(6,89) L						MUL01580
	       GOTO 999 						MUL01590
	    ENDIF							MUL01600
	    LINR(L,1) = KK						MUL01610
	    FL(L,1) = LINR(L,1).NE.0					MUL01620
	    IF	(FL(L,2)) LINR(L,2)=LINR(L,2)+KK			MUL01630
	    IF	(FL(L,3)) LINR(L,3)=LINR(L,3)+KK+NLM(II,2)-1		MUL01640
	    LL=LL+NP							MUL01650
15	 CONTINUE							MUL01660
	 KK=KK+NLM(II,2)+NLM(II,3)-1					MUL01670
20    CONTINUE								MUL01680
C									MUL01690
C *** SET JACOBIAN MATRIX ( HERE PART OF ARRAY W ) TO ZERO.		MUL01700
C *** DEFINE CONSTANT PARTS OF JACOBIAN. SET INITIAL ESTIMATE OF SHIFTS MUL01710
C *** IN REFERENCE LINE ( PARAMETERS X(1) TO X(NP) ) TO SHIFTS IN FIRST MUL01720
C *** LINE OF THE DATA FILE, AND READ INITIAL ESTIMATES OF REMAINING	MUL01730
C *** PARAMETERS							MUL01740
C									MUL01750
      L=N*(2*N+1)							MUL01760
      DO 30 I=L+1,L+M*N 						MUL01770
	 W(I)=0.0D0							MUL01780
30    CONTINUE								MUL01790
      DO 40 I=1,NP							MUL01800
	 X(I) = Z(I)							MUL01810
	 DO 40 J=2,NL							MUL01820
	    KK=L+NP+N*(I-1+(J-1)*NP)					MUL01830
	    IF (FL(J,1)) W(KK+2*LINR(J,1))=-1.0D0/ALF(I)		MUL01840
	    IF (FL(J,2)) W(KK+2*LINR(J,2))=-1.0D0/ALF(I)		MUL01850
	    IF (FL(J,3)) W(KK+2*LINR(J,3))= 1.0/ALF(I)			MUL01860
40    CONTINUE								MUL01870
      READ(5,*) (X(I),I=NP+1,N) 					MUL01880
C									MUL01890
C *** CALL FIT2. TEST ERROR FLAG, CALL RANDJ TO EVALUATE RESIDUALS	MUL01900
C *** CORRESPONDING TO FINAL PARAMETER VALUES.				MUL01910
C									MUL01920
      IFAIL=0								MUL01930
      WRITE(6,91) EL,(A1(I),A2(I),I=1,NP)				MUL01940
      LL=L+1								MUL01950
      JJ=N*N+1								MUL01960
      CALL FIT2(M,N,N1,K,NL,NP,NIT,IFAIL,X,R,W(LL),WZ,WL,W(JJ),W,DX,CHI)MUL01970
      IF (IFAIL.NE.0) THEN						MUL01980
	 WRITE(6,92) IFAIL						MUL01990
	 GOTO 999							MUL02000
      ENDIF								MUL02010
      CALL RANDJ(M,N,K,NL,NP,0,IFAIL,X,R,W(LL),WZ,WL,CHI)		MUL02020
C									MUL02030
C *** FIND ERROR ESTIMATES DX IN PARAMETERS X.				MUL02040
C									MUL02050
      DO 60 I=1,N							MUL02060
	 DX(I)=DSQRT(W(I+(I-1)*N))					MUL02070
60    CONTINUE								MUL02080
C									MUL02090
C *** WRITE CHI-SQUARED, DEGREES OF FREEDOM , FINAL PARAMETERS AN	MUL02100
C *** ESTIMATED ERRORS.IF THE ASSIGNED STANDARD DEVIATIONS ARE REALISTICMUL02110
C *** THEN CHI-SQUARED SHOULD BE ROUGHLY EQUAL TO THE NUMBER OF DEGREES MUL02120
C *** OF FREEDOM.							MUL02130
C									MUL02140
      WRITE(6,103)							MUL02150
      IK=M-N								MUL02160
      IF (IK.EQ.0) IK=1 						MUL02170
      WRITE(6,93) CHI,IK,DSQRT(CHI/IK),(A1(I),A2(I),X(I),DX(I),I=1,NP)	MUL02180
      WRITE(6,94) (I,X(I),DX(I),I=NP+1,N)				MUL02190
C									MUL02200
C *** WRITE DETAILS OF THE FIT FOR EACH SPEKTRAL LINE.			MUL02210
C									MUL02220
      II=0								MUL02230
C									MUL02240
C ***	 CALCULATE PHI AND MUE FOR THE LINE AND THEIR ERRORS ( HERE	MUL02250
C ***	 CALLED F,S,DF AND DS ).					MUL02260
C									MUL02270
      IK=60/((NP+3)*2+1)						MUL02280
      IIK=IK								MUL02290
      DO 70 I=1,NL							MUL02300
	 IF (IIK.GE.IK) THEN						MUL02310
	    WRITE(6,103)						MUL02320
	    IIK=0							MUL02330
	 ENDIF								MUL02340
	 IIK=IIK+1							MUL02350
	 F=1.D0 							MUL02360
	 IF (FL(I,1)) F=0.D0						MUL02370
	 S=0.D0 							MUL02380
	 DF=0.0 							MUL02390
	 DS=0.0 							MUL02400
	 DO 61 J=1,2							MUL02410
	    IF (FL(I,J)) THEN						MUL02420
	       K=NP-1+2*LINR(I,J)					MUL02430
	       KK=K+1							MUL02440
	       F=F+X(K) 						MUL02450
	       S=S+X(KK)						MUL02460
	       DF=DF+W(K+(K-1)*N)					MUL02470
	       DS=DS+W(KK+K*N)						MUL02480
	    ENDIF							MUL02490
61	 CONTINUE							MUL02500
	 IF (FL(I,3)) THEN						MUL02510
	    K=NP-1+2*LINR(I,3)						MUL02520
	    KK=K+1							MUL02530
	    F=F-X(K)							MUL02540
	    S=S-X(KK)							MUL02550
	    DF=DF+W(K+(K-1)*N)						MUL02560
	    DS=DS+W(KK+K*N)						MUL02570
	 ENDIF								MUL02580
	 DO 62 J=1,2							MUL02590
	    DO 62 K=J+1,3						MUL02600
	       IF (FL(I,J).AND.FL(I,K)) THEN				MUL02610
		  JJ=NP-1+2*LINR(I,J)					MUL02620
		  KK=NP-1+2*LINR(I,K)					MUL02630
		  LL=2							MUL02640
		  IF (K.EQ.3) LL=-2					MUL02650
		  DF=DF+LL*W(KK+(JJ-1)*N)				MUL02660
		  DS=DS+LL*W(KK+1+JJ*N) 				MUL02670
	       ENDIF							MUL02680
62	 CONTINUE							MUL02690
	 DF=DSQRT(DF)							MUL02700
	 DS=DSQRT(DS)							MUL02710
C									MUL02720
C ***	 CALCULATE THE CONTRIBUTION TO CHI-SQUARED FROM THE LINE (C2) . MUL02730
C									MUL02740
	 C2=0.0 							MUL02750
	 LL=(I-1) * NP							MUL02760
	 IF (WL(I)) THEN						MUL02770
	    DO 53 J=1,NP						MUL02780
	       KK=J+LL							MUL02790
	       C2=C2+WZ(II+J+((J-1)*(2*NP-J))/2)*(R(KK)**2)		MUL02800
53	    CONTINUE							MUL02810
	    DO 54 J=1,NP-1						MUL02820
	       JJ=J+LL							MUL02830
	       DO 54 K=J+1,NP						MUL02840
		  KK=K+L						MUL02850
		  C2=C2+2*R(JJ)*R(KK)*WZ(II+K+((J-1)*(2*NP-J))/2)	MUL02860
54	    CONTINUE							MUL02870
	    II=II+(NP*(NP+1))/2 					MUL02880
	 ELSE								MUL02890
	    DO 55 J=1,NP						MUL02900
	       KK=J+LL							MUL02910
	       C2=C2+WZ(II+J)*(R(KK)**2)				MUL02920
55	    CONTINUE							MUL02930
	    II=II+NP							MUL02940
	 ENDIF								MUL02950
C									MUL02960
C ***	 CALCULATE THE ERRORS IN THE FITTED SHIFTS (XALF).		MUL02970
C									MUL02980
	 DO 65 J=1,NP							MUL02990
	    JJ=L+(LL+J-1)*N						MUL03000
	    XALF(J)=0.0 						MUL03010
	    DO 64 K=1,N 						MUL03020
	       IF (W(JJ+K).EQ.0.D0) GOTO 64				MUL03030
	       DO 63 KK=1,N						MUL03040
		  IF (W(JJ+KK).EQ.0.D0) GOTO 63 			MUL03050
		  XALF(J)=XALF(J)+W(JJ+K)*W(JJ+KK)*W(KK+(K-1)*N)	MUL03060
63		CONTINUE						MUL03070
64	    CONTINUE							MUL03080
	    XALF(J)=DSQRT(XALF(J))					MUL03090
65	 CONTINUE							MUL03100
	 WRITE(6,95) TITLE(I),F,DF,S,DS,I,C2,UNIT(I),UNIT(I),UNIT(I),	MUL03110
     *		     UNIT(I),UNIT(I)					MUL03120
	 WRITE(14,69) TITLE(I)(6:9),TITLE(I)(1:4)			MUL03130
69	 FORMAT(2A12)							MUL03140
68	 FORMAT(10F10.2)						MUL03150
	 DO  70 J=1,NP							MUL03160
	    YCALC=Z(J+LL)-R(J+LL)					MUL03170
	    WRITE(6,104) A1(J),A2(J),YCALC,XALF(J),Z(J+LL),R(J+LL)	MUL03180
70    CONTINUE								MUL03190
C									MUL03200
C *** WRITE THAT PART OF THE PARAMETER VCV MATRIX REFERRING TO THE	MUL03210
C *** SHIFTS.								MUL03220
C									MUL03230
      WRITE(6,103)							MUL03240
      WRITE(6,96)							MUL03250
      DO 75 I=1,NP							MUL03260
75	 WRITE(6,97)(W(J+(I-1)*N),J=1,I)				MUL03270
C									MUL03280
C *** IF REQUIRED, WRITE ALL THE PARAMETERS AND VCV MATRIX TO		MUL03290
C *** SEPERATE FILE.							MUL03300
C									MUL03310
      DO 80 I=1,NP							MUL03320
80	 WRITE(6,98) ((W(J+(I-1)*N)/DX(I)/DX(J)),J=1,I) 		MUL03330
      IF (ID.EQ.0) GOTO 999						MUL03340
      WRITE(6,101) (X(I),I=1,N) 					MUL03350
      WRITE(15,101) (X(I),I=NP+1,N)					MUL03360
C     WRITE(6,102) ((W(J+(I-1)*N)/DX(I)/DX(J)),J=1,N)			MUL03370
C									MUL03380
88    FORMAT('0INCONSISTENT DATA FILE:'/				MUL03390
     *	     I3,' LINES IN TOTAL, BUT GROUP TOTALS ADD UP TO',I4)	MUL03400
89    FORMAT('0ERROR IN LEVEL ASSIGNMENTS IN LINE NUMBER ',I4)		MUL03410
90    FORMAT('0MORE STORAGE REQUIRED. INCREASE LW TO AT LEASTS',I6)	MUL03420
91    FORMAT('0     MULTI-DIMENSIONAL KING PLOT OF ',A2,		MUL03430
     *	     ' ISOTOPE SHIFTS',/,'0',5X,48('*'),/,42X,/,		MUL03440
     *	     '0   CHI-SQUARED',10(I5,' -',I3,' '))			MUL03450
92    FORMAT('0 ERROR EXIT FROM FIT2. IFAIL =',I2 )			MUL03460
93    FORMAT('0 CHI-SQUARED     = ',F9.2,/,'0 DEG. OF FREEDOM = ',I9,	MUL03470
     *	   /,'0 RMS             = ',F9.2,				MUL03480
     *	 /,'- PARAMETERVALUES',10(/,'0',I4,' -',I3,F14.4,'(',F7.4,')')) MUL03490
94    FORMAT('0P',I3,'     GRADIENT   = ',F20.8,'(',F20.10,')',/,	MUL03500
     *	     ' P',I3,'     INTERCEPT  = ',F20.8,'(',F20.10,')') 	MUL03510
95    FORMAT('0 ',A10,'  F = ',F12.5,'(',F12.5,') M=',F12.5,'(',F12.5,	MUL03520
     * ')',/,'0 LINIE NR.',I3,10X,'CONTRIBUTION TO CHI-SQUARED = ',	MUL03530
     * 0PF12.3,/,'0', 22X,'FIT/',A3,12X,'EXP/',A3,4X,'RESIDUAL/',A3,	MUL03540
     * 3X,'F-ANTEIL/',A3,12X,'M-ANTEIL/',A3)				MUL03550
104   FORMAT('0',3X,I3,' -',I3,F15.3,'(',F6.3,')',2(F14.3))		MUL03560
96    FORMAT('0     CORRELATION MATRIX OF SHIFTS')			MUL03570
97    FORMAT('0',10(1PD10.2))						MUL03580
98    FORMAT('0',10(F10.3))						MUL03590
99    FORMAT('0  ERROR IN CORRELATION MATRIX FOR LINE NUMBER ',I4)	MUL03600
101   FORMAT(1PD15.7)							MUL03610
102   FORMAT(10(1PD12.4))						MUL03620
103   FORMAT('1')							MUL03630
999   STOP								MUL03640
      END								MUL03650
C									MUL03660
C									MUL03670
      SUBROUTINE RANDJ(M,N,LW,NL,NP,NIT,IFAIL,X,R,JAC,W,WL,CHI) 	MUL03680
      INTEGER * 4 MM,NPM,LM						MUL03690
      PARAMETER(MM=600,NPM=6,LM=100)					MUL03700
      INTEGER * 4 N,NP							MUL03710
      INTEGER * 4 M,NL,LW,LINR(LM,3),NIT,L1,L2,L3,I,J,K,LL		MUL03720
      REAL * 8 X(N),R(M),JAC(N,M),F,S,Z(MM),ALF(NPM),W(LW),CHI		MUL03730
      LOGICAL * 1 FL(LM,3),WL(NL)					MUL03740
      COMMON Z,ALF,LINR,FL						MUL03750
C									MUL03760
C *** CALCULATE RESIDUALS AND JACOBIAN MATRIX ELEMENTS FOR EACH SPEKTRALMUL03770
C *** LINE :								MUL03780
C ***	     CALCULATE PHI AND MUE ( HERE CALLED F AND S )		MUL03790
C									MUL03800
      DO 10 J=1,NL							MUL03810
	 F=1.0D0							MUL03820
	 S=0.0D0							MUL03830
	 IF ( FL(J,1)) THEN						MUL03840
	    L1=NP-1+2*LINR(J,1) 					MUL03850
	    F=X(L1)							MUL03860
	    S=X(L1+1)							MUL03870
	 ENDIF								MUL03880
	 IF (FL(J,2)) THEN						MUL03890
	    L2=NP-1+2*LINR(J,2) 					MUL03900
	    F=F+X(L2)							MUL03910
	    S=S+X(L2+1) 						MUL03920
	 ENDIF								MUL03930
	 IF (FL(J,3)) THEN						MUL03940
	    L3=NP-1+2*LINR(J,3) 					MUL03950
	    F=F-X(L3)							MUL03960
	    S=S-X(L3+1) 						MUL03970
	 ENDIF								MUL03980
C									MUL03990
C ***	      CALCULATE RESIDUALS AND JACOBIAN MATRIX . 		MUL04000
C									MUL04010
	 DO 10 I=1,NP							MUL04020
	    K=I+(J-1)*NP						MUL04030
	    R(K)=Z(K) -(X(I)*F+S/ALF(I))				MUL04040
	    JAC(I,K)=-F 						MUL04050
	    IF (FL(J,1))  THEN						MUL04060
	       JAC(L1,K) =-X(I) 					MUL04070
	    ENDIF							MUL04080
	    IF (FL(J,2))  THEN						MUL04090
	       JAC(L2,K) =-X(I) 					MUL04100
	    ENDIF							MUL04110
	    IF (FL(J,3))  THEN						MUL04120
	       JAC(L3,K) = X(I) 					MUL04130
	    ENDIF							MUL04140
10    CONTINUE								MUL04150
      CHI=0.0D0 							MUL04160
      L3=0								MUL04170
      DO 50 I=1,NL							MUL04180
	 IF (WL(I)) THEN						MUL04190
	    DO 20 J=1,NP						MUL04200
	       L1=J+(I-1)*NP						MUL04210
20	       CHI=CHI+W(L3+J+((J-1)*(2*NP-J))/2)*(R(L1)**2)		MUL04220
	    DO 30 J=1,NP-1						MUL04230
	       L1=J+(I-1)*NP						MUL04240
	       DO 30 K=J+1,NP						MUL04250
		  L2=K+(I-1)*NP 					MUL04260
30		  CHI=CHI+2.0*R(L1)*R(L2)*W(L3+K+((J-1)*(2*NP-J))/2)	MUL04270
	    L3=L3+(NP*(NP+1))/2 					MUL04280
	 ELSE								MUL04290
	    DO 40 J=1,NP						MUL04300
	       L1=J+(I-1)*NP						MUL04310
40	       CHI=CHI+W(L1)*(R(L1)**2) 				MUL04320
	 ENDIF								MUL04330
50    CONTINUE								MUL04340
      WRITE(6,60) CHI,(X(I),I=1,NP)					MUL04350
60    FORMAT('0  ',1PE12.4,10(E11.4E1)) 				MUL04360
      RETURN								MUL04370
      END								MUL04380
C									MUL04390
C									MUL04400
      SUBROUTINE FIT2(M,N,N1,LW,NL,NP,MAX,IFL,X,R,JAC,W,WL,C,CIN,DX,CHI)MUL04410
      INTEGER * 4 N,N1,IFL,NP						MUL04420
      INTEGER * 4 M,NIT,MAX,LW,NL,I,J,K,L,II,JJ,KK,LL			MUL04430
      REAL * 8 X(N),R(M),JAC(N,M),C(N1,N),CIN(N,N),W(LW),DX(N),CHI	MUL04440
      REAL * 8 CHIOLD							MUL04450
      LOGICAL * 1 WL(NL) ,FLAG						MUL04460
      EXTERNAL RANDJ,F01ABF						MUL04470
      CHIOLD = 0.0D0							MUL04480
      FLAG = .FALSE.							MUL04490
      DO 100 NIT = 1,MAX						MUL04500
	 CALL RANDJ(M,N,LW,NL,NP,NIT,IFL,X,R,JAC,W,WL,CHI)		MUL04510
	 IF (DABS(CHIOLD-CHI).LT.(1.0D-4*CHI)) FLAG = .TRUE.		MUL04520
	 IF (DABS(CHI).LT.1.0D-5)  FLAG = .TRUE.			MUL04530
	 CHIOLD = CHI							MUL04540
	 DO 5 I=1,N							MUL04550
	    DO 5 J=1,I							MUL04560
5	       C(J,I)=0.0D0						MUL04570
C									MUL04580
C ***	 CALCULATE C							MUL04590
C									MUL04600
	 L=0								MUL04610
	 DO 25 K=1,NL							MUL04620
	    IF (WL(K)) THEN						MUL04630
	       DO 10 II=1,NP						MUL04640
		  KK=II+(K-1)*NP					MUL04650
		  DO 10 I=1,N						MUL04660
		     DO 10 J=1,I					MUL04670
10			C(J,I)=C(J,I)+JAC(J,KK)*JAC(I,KK)*W(L+II+	MUL04680
     *			       ((II-1)*(2*NP-II))/2)			MUL04690
	       DO 15 II=1,NP-1						MUL04700
		  KK=II+(K-1)*NP					MUL04710
		  DO 15 JJ=II+1,NP					MUL04720
		     LL=JJ+(K-1)*NP					MUL04730
		     DO 15 I=1,N					MUL04740
			DO 15 J=1,I					MUL04750
15			C(J,I)=C(J,I)+W(L+JJ+((II-1)*(2*NP-II))/2)*	MUL04760
     *			       (JAC(J,KK)*JAC(I,LL)+JAC(I,KK)*JAC(J,LL))MUL04770
	       L=L+(NP*(NP+1))/2					MUL04780
	     ELSE							MUL04790
	       DO 20 II=1,NP						MUL04800
		  KK=II+(K-1)*NP					MUL04810
		  DO 20 I=1,N						MUL04820
		     DO 20 J=1,I					MUL04830
20			C(J,I)=C(J,I)+JAC(J,KK)*JAC(I,KK)*W(KK) 	MUL04840
	    ENDIF							MUL04850
25	 CONTINUE							MUL04860
	 KK=NP*NL							MUL04870
C									MUL04880
C ***	 CALCULATE THE INVERSE OF C.					MUL04890
C									MUL04900
	 IFL=1								MUL04910
	 CALL F01ABF(C,N1,N,CIN,N,DX,IFL)				MUL04920
	 IF (IFL.NE.0) GOTO 999 					MUL04930
	 DO 35 I=1,N							MUL04940
35	      DX(I)=0.0 						MUL04950
C									MUL04960
C ***	 CALCULATE CHANGE OF PARAMETERS 				MUL04970
C									MUL04980
	 L=0								MUL04990
	 DO 55 K=1,NL							MUL05000
	    IF (WL(K)) THEN						MUL05010
	       DO 40 II=1,NP						MUL05020
		  KK=II+(K-1)*NP					MUL05030
		  DO 40 I=1,N						MUL05040
		     DO 40 J=1,N					MUL05050
40			DX(J)=DX(J)-CIN(J,I)*JAC(I,KK)*W(L+II+((II-1)*	MUL05060
     *			       (2*NP-II))/2)*R(KK)			MUL05070
	       DO 45 II=1,NP-1						MUL05080
		  KK=II+(K-1)*NP					MUL05090
		  DO 45 JJ=II+1,NP					MUL05100
		     LL=JJ+(K-1)*NP					MUL05110
		     DO 45 I=1,N					MUL05120
			DO 45 J=1,N					MUL05130
45			   DX(J)=DX(J)-CIN(J,I)*W(L+JJ+((II-1)*(2*NP-II)MUL05140
     *				 )/2)*(JAC(I,KK)*R(LL)+JAC(I,LL)*R(KK)) MUL05150
	       L=L+(NP*(NP+1))/2					MUL05160
	    ELSE							MUL05170
	       DO 50 II=1,NP						MUL05180
		  KK=II+(K-1)*NP					MUL05190
		  DO 50 I=1,N						MUL05200
		     DO 50 J=1,N					MUL05210
50			DX(J)=DX(J)-CIN(J,I)*JAC(I,KK)*W(KK)*R(KK)	MUL05220
	    ENDIF							MUL05230
55	 CONTINUE							MUL05240
C									MUL05250
C *** CALCULATE IMPROVED PARAMETER VALUES.				MUL05260
C									MUL05270
	 DO 60 I=1,N							MUL05280
60	    X(I)=X(I)+DX(I)						MUL05290
      IF ( FLAG ) GOTO 999						MUL05300
100   CONTINUE								MUL05310
999   RETURN								MUL05320
      END								MUL05330
C									MUL05340
C									MUL05350
      SUBROUTINE F01ABF(C,N1,N,CIN,K,DX,IFL)				MUL05360
      INTEGER * 4 I,J,K,N1,N						MUL05370
      REAL * 8	C(N1,N),CIN(N,N),DX(N)					MUL05380
      INTEGER * 4 H1(150),H2(150)					MUL05390
      REAL * 8 D							MUL05400
      DO 10 I=1,N							MUL05410
	 DO 10 J=1,I							MUL05420
	    CIN(J,I)=C(J,I)						MUL05430
	    CIN(I,J)=C(J,I)						MUL05440
10    CONTINUE								MUL05450
      CALL DMINV(CIN,N,D,H1,H2) 					MUL05460
      IF (DABS(D).GT.1.0D-3) IFL = 0					MUL05470
      RETURN								MUL05480
      END								MUL05490
C									MUL05500
C									MUL05510
      SUBROUTINE DMINV (A,N,D,L,M)					MUL05520
      DIMENSION A(1),L(1),M(1)						MUL05530
      DOUBLE PRECISION A,D,BIGA,HOLD					MUL05540
      INTEGER * 4 N							MUL05550
C									MUL05560
C	 SEARCH FOR LARGEST ELEMENT					MUL05570
C									MUL05580
      D=1.0								MUL05590
      NK=-N								MUL05600
      DO 80 K=1,N							MUL05610
      NK=NK+N								MUL05620
      L(K)=K								MUL05630
      M(K)=K								MUL05640
      KK=NK+K								MUL05650
      BIGA=A(KK)							MUL05660
      DO 20 J=K,N							MUL05670
      IZ=N*(J-1)							MUL05680
      DO 20 I=K,N							MUL05690
      IJ=IZ+I								MUL05700
   10 IF (DABS(BIGA)-DABS(A(IJ)))  15,20,20				MUL05710
   15 BIGA=A(IJ)							MUL05720
      L(K)=I								MUL05730
      M(K)=J								MUL05740
   20 CONTINUE								MUL05750
C									MUL05760
C	 INTERCHANGE ROWS						MUL05770
C									MUL05780
      J=L(K)								MUL05790
      IF(J-K) 35,35,25							MUL05800
   25 KI=K-N								MUL05810
      DO 30 I=1,N							MUL05820
      KI=KI+N								MUL05830
      HOLD=-A(KI)							MUL05840
      JI=KI-K+J 							MUL05850
      A(KI)=A(JI)							MUL05860
   30 A(JI) =HOLD							MUL05870
C									MUL05880
C	 INTERCHANGE COLUMNS						MUL05890
C									MUL05900
   35 I=M(K)								MUL05910
      IF(I-K) 45,45,38							MUL05920
   38 JP=N*(I-1)							MUL05930
      DO 40 J=1,N							MUL05940
      JK=NK+J								MUL05950
      JI=JP+J								MUL05960
      HOLD=-A(JK)							MUL05970
      A(JK)=A(JI)							MUL05980
   40 A(JI) =HOLD							MUL05990
C									MUL06000
C	 DIVIDE COLUMN BY MINUS PIVOT (VALUE OF PIVOT ELEMENT IS	MUL06010
C	 CONTAINED IN BIGA)						MUL06020
C									MUL06030
   45 IF(BIGA) 48,46,48 						MUL06040
   46 D=0.0								MUL06050
      RETURN								MUL06060
   48 DO 55 I=1,N							MUL06070
      IF(I-K) 50,55,50							MUL06080
   50 IK=NK+I								MUL06090
      A(IK)=A(IK)/(-BIGA)						MUL06100
   55 CONTINUE								MUL06110
C									MUL06120
C	 REDUCE MATRIX							MUL06130
C									MUL06140
      DO 65 I=1,N							MUL06150
      IK=NK+I								MUL06160
      HOLD=A(IK)							MUL06170
      IJ=I-N								MUL06180
      DO 65 J=1,N							MUL06190
      IJ=IJ+N								MUL06200
      IF(I-K) 60,65,60							MUL06210
   60 IF(J-K) 62,65,62							MUL06220
   62 KJ=IJ-I+K 							MUL06230
      A(IJ)=HOLD*A(KJ)+A(IJ)						MUL06240
   65 CONTINUE								MUL06250
C									MUL06260
C	 DIVIDE ROW BY PIVOT						MUL06270
C									MUL06280
      KJ=K-N								MUL06290
      DO 75 J=1,N							MUL06300
      KJ=KJ+N								MUL06310
      IF(J-K) 70,75,70							MUL06320
   70 A(KJ)=A(KJ)/BIGA							MUL06330
   75 CONTINUE								MUL06340
C									MUL06350
C	 PRODUCT OF PIVOTS						MUL06360
C									MUL06370
      D=D*BIGA*0.0D0+1.0D0						MUL06380
C									MUL06390
C	 REPLACE PIVOT BY RECIPROCAL					MUL06400
C									MUL06410
      A(KK)=1.0/BIGA							MUL06420
   80 CONTINUE								MUL06430
C									MUL06440
C	 FINAL ROW AND COLUMN INTERCHANGE				MUL06450
C									MUL06460
      K=N								MUL06470
  100 K=(K-1)								MUL06480
      IF(K) 150,150,105 						MUL06490
  105 I=L(K)								MUL06500
      IF(I-K) 120,120,108						MUL06510
  108 JQ=N*(K-1)							MUL06520
      JR=N*(I-1)							MUL06530
      DO 110 J=1,N							MUL06540
      JK=JQ+J								MUL06550
      HOLD=A(JK)							MUL06560
      JI=JR+J								MUL06570
      A(JK)=-A(JI)							MUL06580
  110 A(JI) =HOLD							MUL06590
  120 J=M(K)								MUL06600
      IF(J-K) 100,100,125						MUL06610
  125 KI=K-N								MUL06620
      DO 130 I=1,N							MUL06630
      KI=KI+N								MUL06640
      HOLD=A(KI)							MUL06650
      JI=KI-K+J 							MUL06660
      A(KI)=-A(JI)							MUL06670
  130 A(JI) =HOLD							MUL06680
      GO TO 100 							MUL06690
150   CONTINUE								MUL06700
      RETURN								MUL06710
      END								MUL06720
680
